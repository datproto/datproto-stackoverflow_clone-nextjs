@import "tailwindcss";

@import url("../styles/theme.css") layer(utilities);

@import "../styles/theme.utilities.css";

@custom-variant dark (&:is(.dark *));

@theme {
  --color-primary-100: #fff1e6;
  --color-primary-500: #ff7000;

  --color-dark-100: #000000;
  --color-dark-200: #0f1117;
  --color-dark-300: #151821;
  --color-dark-400: #212734;
  --color-dark-500: #101012;

  --color-light-400: #858ead;
  --color-light-500: #7b8ec8;
  --color-light-700: #dce3f1;
  --color-light-800: #f4f6f8;
  --color-light-850: #fdfdfd;
  --color-light-900: #ffffff;

  --color-accent-blue: #1da1f2;

  --font-inter: var(--font-inter);
  --font-space-grotesk: var(--font-spaceGrotesk);

  --shadow-light-100: 0px 12px 20px 0px rgba(184, 184, 184, 0.03),
    0px 6px 12px 0px rgba(184, 184, 184, 0.02),
    0px 2px 4px 0px rgba(184, 184, 184, 0.03);
  --shadow-light-200: 10px 10px 20px 0px rgba(218, 213, 213, 0.1);
  --shadow-light-300: -10px 10px 20px 0px rgba(218, 213, 213, 0.1);
  --shadow-dark-100: 0px 2px 10px 0px rgba(46, 52, 56, 0.1);
  --shadow-dark-200: 2px 0px 20px 0px rgba(39, 36, 36, 0.04);

  --background-image-auth-dark: url("/assets/images/auth-dark.png");
  --background-image-auth-light: url("/assets/images/auth-light.png");

  --breakpoint-xs: 420px;

  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;

  @keyframes accordion-down {
    from {
      height: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }
  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0;
    }
  }
}

@utility container {
  margin-inline: auto;
  padding-inline: 2rem;
  @media (width >= --theme(--breakpoint-xs)) {
    max-width: none;
  }
  @media (width >= 1400px) {
    max-width: 1400px;
  }
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@layer utilities {
  body {
    font-family: "Inter", sans-serif;
  }

  .flex-center {
    @apply flex justify-center items-center;
  }

  .flex-between {
    @apply flex justify-between items-center;
  }

  .flex-start {
    @apply flex justify-start items-center;
  }

  .card-wrapper {
    @apply bg-light-900 dark:dark-gradient shadow-light-100 dark:shadow-dark-100;
  }

  .btn {
    @apply bg-light-800! dark:bg-dark-300!;
  }

  .btn-secondary {
    @apply bg-light-800! dark:bg-dark-400!;
  }

  .btn-tertiary {
    @apply bg-light-700! dark:bg-dark-300!;
  }

  /* .markdown {
    @apply max-w-full prose dark:prose-p:text-light-700 dark:prose-ol:text-light-700 dark:prose-ul:text-light-500 dark:prose-strong:text-white dark:prose-headings:text-white prose-headings:text-dark-400 prose-h1:text-dark-300 prose-h2:text-dark-300 prose-p:text-dark-500 prose-ul:text-dark-500 prose-ol:text-dark-500;
  } */

  .primary-gradient {
    background: linear-gradient(129deg, #ff7000 0%, #e2995f 100%);
  }

  .dark-gradient {
    background: linear-gradient(
      232deg,
      rgba(23, 28, 35, 0.41) 0%,
      rgba(19, 22, 28, 0.7) 100%
    );
  }

  .tab {
    @apply min-h-full! dark:bg-dark-400! bg-light-800! text-light-500! dark:data-[state=active]:bg-dark-300! data-[state=active]:bg-primary-100! data-[state=active]:text-primary-500!;
  }
}

.no-focus {
  @apply focus-visible:ring-0! focus-visible:ring-transparent! focus-visible:ring-offset-0!;
}

.active-theme {
  filter: invert(53%) sepia(98%) saturate(3332%) hue-rotate(0deg)
    brightness(104%) contrast(106%) !important;
}

.light-gradient {
  background: linear-gradient(
    132deg,
    rgba(247, 249, 255, 0.5) 0%,
    rgba(229, 237, 255, 0.25) 100%
  );
}

.primary-text-gradient {
  background: linear-gradient(129deg, #ff7000 0%, #e2995f 100%);
  background-clip: text;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
}

.custom-scrollbar::-webkit-scrollbar {
  width: 3px;
  height: 3px;
  border-radius: 2px;
}

.custom-scrollbar::-webkit-scrollbar-track {
  background: #ffffff;
}

.custom-scrollbar::-webkit-scrollbar-thumb {
  background: #888;
  border-radius: 50px;
}

.custom-scrollbar::-webkit-scrollbar-thumb:hover {
  background: #555;
}

/* Markdown Start */
.markdown a {
  color: #1da1f2;
}

.markdown a,
code {
  /* These are technically the same, but use both */
  overflow-wrap: break-word;
  word-wrap: break-word;

  -ms-word-break: break-all;
  /* This is the dangerous one in WebKit, as it breaks things wherever */
  word-break: break-all;
  /* Instead use this non-standard one: */
  word-break: break-word;

  /* Adds a hyphen where the word breaks, if supported (No Blink) */
  -ms-hyphens: auto;
  -moz-hyphens: auto;
  -webkit-hyphens: auto;
  hyphens: auto;

  padding: 2px;
  color: #ff7000 !important;
}

.markdown pre {
  display: grid;
  width: 100%;
}

.markdown pre code {
  width: 100%;
  display: block;
  overflow-x: auto;

  color: inherit !important;
}

/* Markdown End */

/* Clerk */
.cl-internal-b3fm6y {
  background: linear-gradient(129deg, #ff7000 0%, #e2995f 100%) !important;
}

.hash-span {
  margin-top: -140px;
  padding-bottom: 140px;
  display: block;
}

/* Hide scrollbar for Chrome, Safari and Opera */
.no-scrollbar::-webkit-scrollbar {
  display: none;
}

/* Hide scrollbar for IE, Edge and Firefox */
.no-scrollbar {
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}
